{"version":3,"file":"static/js/488.43cb902e.chunk.js","mappings":"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","sources":["components/Login/LoginSchema.jsx","components/Register/styled.js","components/Login/index.jsx","components/Register/index.jsx","pages/Auth/styled.js","pages/Auth/index.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Email is required')\n    .matches(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/, {\n      message: 'Email error',\n      excludeEmptyString: true,\n    }),\n  password: Yup.string()\n    .min(8, 'Password must be at least 8 characters')\n    .required('Password is required')\n    .matches(/^[a-zA-Z0-9]+$/, {\n      message: 'Password error',\n      excludeEmptyString: true,\n    }),\n});\n","import { Form, Field, ErrorMessage } from 'formik';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const AuthForm = styled(Form)`\n  max-width: 335px;\n  width: 100%;\n  height: fit-content;\n  padding: 24px;\n  border-radius: 8px;\n  background: rgba(31, 31, 31, 1);\n   @media screen and (min-width: 767px) {\n    max-width: 424px;\n    padding: 40px;\n  }\n`;\n\n\n\nexport const AuthNav = styled.div`\n  display: flex;\n  margin-bottom: 40px;\n`;\n\nexport const RegisterLink = styled(Link)`\n  margin-right: 14px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: white;\n  cursor: inherit;\n`;\n\nexport const LoginLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: rgba(255, 255, 255, 0.3);\n\n  &:hover,\n  &:focus {\n    color: #bedbb0;\n  }\n`;\n\nexport const RegisterLinkLog = styled(Link)`\n  margin-right: 14px;\n  letter-spacing: -0.02em;\n  color: rgba(255, 255, 255, 0.3);\n  font-size: 18px;\n  font-weight: 500;\n  font-style: normal;\n  line-height: 27px;\n\n  &:hover,\n  &:focus {\n    color: #bedbb0;\n  }\n`;\n\nexport const LoginLinkLog = styled(Link)`\n  top: 40px;\n  left: 160px;\n  letter-spacing: -0.02em;\n  color: white;\n  font-size: 18px;\n  font-weight: 500;\n  font-style: normal;\n  line-height: 27px;\n  cursor: inherit;\n`;\n\nexport const AuthInput = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  height: 49px;\n  margin-bottom: 14px;\n  padding: 14px 0px 14px 18px;\n  outline: none;\n  color: 1F1F1F;\n  border-radius: 8px;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n\n  &:focus-within {\n    border: 1px solid rgba(190, 219, 176, 1);\n  }\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus {\n    -webkit-box-shadow: 0 0 0px 1000px #151515 inset;\n    -webkit-text-fill-color: grey;\n  }\n`;\n\nexport const AuthField = styled(Field)`\n  width: 100%;\n  font-size: 14px;\n  background: inherit;\n  letter-spacing: -0.02em;\n  border: none;\n  line-height: 21px;\n  outline: none;\n  color: rgba(190, 219, 176, 1);\n  &:focus {\n    opacity: 1;\n  }\n  &:focus::placeholder {\n    transition: opacity 0.3s ease-in-out;\n    border: none;\n  }\n`;\n\nexport const ThirdPasswordField = styled(AuthField)`\n  padding: 14px 40px 14px 0;\n  position: relative;\n`;\n\nexport const AuthFormPasswordIcon = styled.div`\n  position: absolute;\n  top: 15px;\n  right: 18px;\n  color: rgba(255, 255, 255, 1);\n  opacity: 0.4;\n\n  cursor: pointer;\n`;\n\nexport const AuthError = styled(ErrorMessage)`\n  text-align: left;\n  color: #ff0000;\n  font-size: 12px;\n  font-family: \"Poppins\", sans-serif;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n  margin-bottom: 10px;\n`;\n\nexport const AuthButton = styled.button`\n  color: rgba(22, 22, 22, 1);\n  background-color: rgba(190, 219, 176, 1);\n  width: 100%;\n  height: 49px;\n  margin-top: 10px;\n  font-style: normal;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 8px;\n  line-height: 21px;\n  letter-spacing: -0.02em;\n  border: none;\n  cursor: pointer;\n  text-align: center;\n\n  &:hover,\n  &:focus,\n  &:active {\n    background: #a1cf89;\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n  \n   @media screen and (min-width: 767px) {\n    width: 344px;}\n\n`;\n\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { logIn } from '../../store/auth/authOperations';\n\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\nimport { LoginSchema } from './LoginSchema';\nimport {\n  AuthForm,\n  AuthNav,\n  RegisterLinkLog,\n  LoginLinkLog,\n  AuthInput,\n  AuthField,\n  AuthError,\n  AuthFormPasswordIcon,\n  ThirdPasswordField,\n  AuthButton,\n} from '../Register/styled';\n\nconst LoginForm = () => {\n    const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleTogglePassword = () => setShowPassword(!showPassword);\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const onSubmit = (values, { resetForm }) => {\n    dispatch(logIn(values));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={LoginSchema}\n        onSubmit={onSubmit}\n      >\n        {() => (\n          <AuthForm>\n            <AuthNav>\n              <RegisterLinkLog to=\"/auth/register\" underline=\"none\">\n                Registration\n              </RegisterLinkLog>\n              <LoginLinkLog to=\"/auth/login\" underline=\"none\">\n                Log In\n              </LoginLinkLog>\n            </AuthNav>\n            <AuthInput>\n              <AuthField\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your email\"\n              />\n            </AuthInput>\n            <AuthError name=\"email\" component=\"div\" />\n            <AuthInput>\n              <ThirdPasswordField\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                placeholder=\"Confirm a password\"\n              />\n\n              <AuthFormPasswordIcon onClick={handleTogglePassword}>\n                {showPassword ? <AiOutlineEyeInvisible /> : <AiOutlineEye />}\n              </AuthFormPasswordIcon>\n            </AuthInput>\n            <AuthError name=\"password\" component=\"div\" />\n            <AuthButton type=\"submit\">Log In Now</AuthButton>\n          </AuthForm>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { register } from '../../store/auth/authOperations';\nimport { RegisterSchema } from './RegisterSchema';\n\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\nimport {\n  AuthForm,\n  AuthNav,\n  RegisterLink,\n  LoginLink,\n  AuthInput,\n  AuthField,\n  AuthError,\n  AuthFormPasswordIcon,\n  AuthButton,\n  ThirdPasswordField,\n} from './styled';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const onSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n    resetForm();\n  };\n\n  const handleTogglePassword = () => setShowPassword(!showPassword);\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={RegisterSchema}\n        onSubmit={onSubmit}\n      >\n        {() => (\n          <AuthForm>\n            <AuthNav>\n              <RegisterLink to=\"/auth/register\" underline=\"none\">\n                Registration\n              </RegisterLink>\n              <LoginLink to=\"/auth/login\" underline=\"none\">\n                Log In\n              </LoginLink>\n            </AuthNav>\n            <AuthInput>\n              <AuthField\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter your name\"\n              />\n            </AuthInput>\n            <AuthError name=\"name\" component=\"div\" />\n            <AuthInput>\n              <AuthField\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your email\"\n              />\n            </AuthInput>\n            <AuthError name=\"email\" component=\"div\" />\n            <AuthInput>\n              <ThirdPasswordField\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                placeholder=\"Create a password\"\n              />\n              <AuthFormPasswordIcon onClick={handleTogglePassword}>\n                {showPassword ? <AiOutlineEyeInvisible /> : <AiOutlineEye />}\n              </AuthFormPasswordIcon>\n            </AuthInput>\n            <AuthError name=\"password\" component=\"div\" />\n            <AuthButton type=\"submit\">Register Now</AuthButton>\n          </AuthForm>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  background-image: linear-gradient(\n    180deg,\n    rgba(196, 196, 196, 0) 25%,\n    #bedbb0 92.19%\n  );\n`; ","import LoginForm from '../../components/Login';\nimport RegisterForm from '../../components/Register';\nimport React from 'react';\nimport { Container } from './styled'\nimport { useParams } from 'react-router-dom';\n\nconst AuthPage = () => {\n  const { id } = useParams();\n\n  return (\n    <Container>\n      {id === 'login' ? <LoginForm /> : <RegisterForm />}\n    </Container>\n  );\n};\n\nexport default AuthPage;\n"],"names":["LoginSchema","Yup","shape","email","required","matches","message","excludeEmptyString","password","min","AuthForm","styled","Form","_templateObject","_taggedTemplateLiteral","AuthNav","_templateObject2","RegisterLink","Link","_templateObject3","LoginLink","_templateObject4","RegisterLinkLog","_templateObject5","LoginLinkLog","_templateObject6","AuthInput","_templateObject7","AuthField","Field","_templateObject8","ThirdPasswordField","_templateObject9","AuthFormPasswordIcon","_templateObject10","AuthError","ErrorMessage","_templateObject11","AuthButton","_templateObject12","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","handleTogglePassword","_jsx","_Fragment","children","Formik","initialValues","validationSchema","onSubmit","values","_ref","resetForm","logIn","_jsxs","to","underline","type","name","placeholder","component","onClick","AiOutlineEyeInvisible","AiOutlineEye","RegisterSchema","register","Container","id","useParams","LoginForm","RegisterForm"],"sourceRoot":""}