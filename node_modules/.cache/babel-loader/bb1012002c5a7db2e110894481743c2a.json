{"ast":null,"code":"import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport { boardsApi } from 'store/boardsSlice';\nimport 'react-toastify/dist/ReactToastify.css';\naxios.defaults.baseURL = 'https://taskpro-backend-uiwy.onrender.com';\nconst setToken = token => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\nconst clearToken = () => {\n  axios.defaults.headers.common.Authorization = '';\n};\nexport const register = createAsyncThunk('auth/register', async (credentials, thunkAPI) => {\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/register', credentials);\n    setToken(data.user.token);\n    await thunkAPI.dispatch(boardsApi.util.invalidateTags(['Boards']));\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\nexport const logIn = createAsyncThunk('auth/login', async (credentials, thunkAPI) => {\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/login', credentials);\n    setToken(data.token);\n    await thunkAPI.dispatch(boardsApi.util.invalidateTags(['Boards']));\n    return data;\n  } catch (error) {\n    toast.error('Error: \"The email address or password is incorrect. Please retry...\"');\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\nexport const logOut = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\n  try {\n    thunkAPI.dispatch({\n      type: 'auth/clearState'\n    });\n    clearToken();\n    await axios.post('/api/users/logout');\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\nexport const refreshUser = createAsyncThunk('auth/refresh', async (_, thunkAPI) => {\n  const state = thunkAPI.getState();\n  const persistedToken = state.auth.token;\n  if (!persistedToken) {\n    return thunkAPI.rejectWithValue('Oops');\n  }\n  setToken(persistedToken);\n  try {\n    const {\n      data\n    } = await axios.get('/api/users/current');\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\nexport const editProfile = createAsyncThunk('auth/editProfile', async (_ref, thunkAPI) => {\n  let {\n    formData,\n    token\n  } = _ref;\n  try {\n    const resp = await axios.patch('api/users', formData, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return resp.data.user;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});","map":{"version":3,"names":["axios","createAsyncThunk","toast","boardsApi","defaults","baseURL","setToken","token","headers","common","Authorization","clearToken","register","credentials","thunkAPI","data","post","user","dispatch","util","invalidateTags","error","rejectWithValue","message","logIn","logOut","_","type","refreshUser","state","getState","persistedToken","auth","get","editProfile","_ref","formData","resp","patch"],"sources":["/Users/vlasvin/Documents/GitHub/TaskPro-FrontEnd-Team5/src/store/auth/authOperations.js"],"sourcesContent":["import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport { boardsApi } from 'store/boardsSlice';\nimport 'react-toastify/dist/ReactToastify.css';\n\naxios.defaults.baseURL = 'https://taskpro-backend-uiwy.onrender.com';\n\nconst setToken = token => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\nconst clearToken = () => {\n  axios.defaults.headers.common.Authorization = '';\n};\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await axios.post('/api/users/register', credentials);\n      setToken(data.user.token);\n\n      await thunkAPI.dispatch(boardsApi.util.invalidateTags(['Boards']));\n\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const logIn = createAsyncThunk(\n  'auth/login',\n  async (credentials, thunkAPI) => {\n    try {\n      const { data } = await axios.post('/api/users/login', credentials);\n      setToken(data.token);\n      await thunkAPI.dispatch(boardsApi.util.invalidateTags(['Boards']));\n      return data;\n    } catch (error) {\n      toast.error(\n        'Error: \"The email address or password is incorrect. Please retry...\"'\n      );\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const logOut = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\n  try {\n    thunkAPI.dispatch({ type: 'auth/clearState' });\n    clearToken();\n\n    await axios.post('/api/users/logout');\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\n\nexport const refreshUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n    if (!persistedToken) {\n      return thunkAPI.rejectWithValue('Oops');\n    }\n    setToken(persistedToken);\n    try {\n      const { data } = await axios.get('/api/users/current');\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\nexport const editProfile = createAsyncThunk(\n  'auth/editProfile',\n  async ({ formData, token }, thunkAPI) => {\n    try {\n      const resp = await axios.patch('api/users', formData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      return resp.data.user;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,OAAO,uCAAuC;AAE9CH,KAAK,CAACI,QAAQ,CAACC,OAAO,GAAG,2CAA2C;AAEpE,MAAMC,QAAQ,GAAGC,KAAK,IAAI;EACxBP,KAAK,CAACI,QAAQ,CAACI,OAAO,CAACC,MAAM,CAACC,aAAa,GAAI,UAASH,KAAM,EAAC;AACjE,CAAC;AAED,MAAMI,UAAU,GAAGA,CAAA,KAAM;EACvBX,KAAK,CAACI,QAAQ,CAACI,OAAO,CAACC,MAAM,CAACC,aAAa,GAAG,EAAE;AAClD,CAAC;AAED,OAAO,MAAME,QAAQ,GAAGX,gBAAgB,CACtC,eAAe,EACf,OAAOY,WAAW,EAAEC,QAAQ,KAAK;EAC/B,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,qBAAqB,EAAEH,WAAW,CAAC;IACrEP,QAAQ,CAACS,IAAI,CAACE,IAAI,CAACV,KAAK,CAAC;IAEzB,MAAMO,QAAQ,CAACI,QAAQ,CAACf,SAAS,CAACgB,IAAI,CAACC,cAAc,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IAElE,OAAOL,IAAI;EACb,CAAC,CAAC,OAAOM,KAAK,EAAE;IACd,OAAOP,QAAQ,CAACQ,eAAe,CAACD,KAAK,CAACE,OAAO,CAAC;EAChD;AACF,CACF,CAAC;AAED,OAAO,MAAMC,KAAK,GAAGvB,gBAAgB,CACnC,YAAY,EACZ,OAAOY,WAAW,EAAEC,QAAQ,KAAK;EAC/B,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,kBAAkB,EAAEH,WAAW,CAAC;IAClEP,QAAQ,CAACS,IAAI,CAACR,KAAK,CAAC;IACpB,MAAMO,QAAQ,CAACI,QAAQ,CAACf,SAAS,CAACgB,IAAI,CAACC,cAAc,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IAClE,OAAOL,IAAI;EACb,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdnB,KAAK,CAACmB,KAAK,CACT,sEACF,CAAC;IACD,OAAOP,QAAQ,CAACQ,eAAe,CAACD,KAAK,CAACE,OAAO,CAAC;EAChD;AACF,CACF,CAAC;AAED,OAAO,MAAME,MAAM,GAAGxB,gBAAgB,CAAC,aAAa,EAAE,OAAOyB,CAAC,EAAEZ,QAAQ,KAAK;EAC3E,IAAI;IACFA,QAAQ,CAACI,QAAQ,CAAC;MAAES,IAAI,EAAE;IAAkB,CAAC,CAAC;IAC9ChB,UAAU,CAAC,CAAC;IAEZ,MAAMX,KAAK,CAACgB,IAAI,CAAC,mBAAmB,CAAC;EACvC,CAAC,CAAC,OAAOK,KAAK,EAAE;IACd,OAAOP,QAAQ,CAACQ,eAAe,CAACD,KAAK,CAACE,OAAO,CAAC;EAChD;AACF,CAAC,CAAC;AAEF,OAAO,MAAMK,WAAW,GAAG3B,gBAAgB,CACzC,cAAc,EACd,OAAOyB,CAAC,EAAEZ,QAAQ,KAAK;EACrB,MAAMe,KAAK,GAAGf,QAAQ,CAACgB,QAAQ,CAAC,CAAC;EACjC,MAAMC,cAAc,GAAGF,KAAK,CAACG,IAAI,CAACzB,KAAK;EACvC,IAAI,CAACwB,cAAc,EAAE;IACnB,OAAOjB,QAAQ,CAACQ,eAAe,CAAC,MAAM,CAAC;EACzC;EACAhB,QAAQ,CAACyB,cAAc,CAAC;EACxB,IAAI;IACF,MAAM;MAAEhB;IAAK,CAAC,GAAG,MAAMf,KAAK,CAACiC,GAAG,CAAC,oBAAoB,CAAC;IACtD,OAAOlB,IAAI;EACb,CAAC,CAAC,OAAOM,KAAK,EAAE;IACd,OAAOP,QAAQ,CAACQ,eAAe,CAACD,KAAK,CAACE,OAAO,CAAC;EAChD;AACF,CACF,CAAC;AAED,OAAO,MAAMW,WAAW,GAAGjC,gBAAgB,CACzC,kBAAkB,EAClB,OAAAkC,IAAA,EAA4BrB,QAAQ,KAAK;EAAA,IAAlC;IAAEsB,QAAQ;IAAE7B;EAAM,CAAC,GAAA4B,IAAA;EACxB,IAAI;IACF,MAAME,IAAI,GAAG,MAAMrC,KAAK,CAACsC,KAAK,CAAC,WAAW,EAAEF,QAAQ,EAAE;MACpD5B,OAAO,EAAE;QACPE,aAAa,EAAG,UAASH,KAAM,EAAC;QAChC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,OAAO8B,IAAI,CAACtB,IAAI,CAACE,IAAI;EACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,OAAOP,QAAQ,CAACQ,eAAe,CAACD,KAAK,CAACE,OAAO,CAAC;EAChD;AACF,CACF,CAAC"},"metadata":{},"sourceType":"module"}