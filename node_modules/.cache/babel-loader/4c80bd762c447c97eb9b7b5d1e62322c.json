{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport { register, logIn, logOut, refreshUser, editProfile } from '../auth/authOperations';\nimport { addCard, deleteCard, editCard } from 'store/dashboards/dashboardsOperations';\nconst initialState = {\n  user: {\n    name: '',\n    email: ''\n  },\n  token: null,\n  isLoggedIn: false,\n  isRefreshing: false\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(register.fulfilled, (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    }).addCase(logIn.fulfilled, (state, action) => {\n      if (action.payload) {\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n        state.isLoggedIn = true;\n      }\n    }).addCase(logOut.fulfilled, (state, action) => {\n      state.user = {\n        name: '',\n        email: ''\n      };\n      state.token = '';\n      state.isLoggedIn = false;\n    }).addCase(refreshUser.fulfilled, (state, action) => {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n    }).addCase(editProfile.fulfilled, (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      console.log('payload: ', payload);\n      state.user.name = payload.name;\n      state.user.email = payload.email;\n      // state.user.theme = payload.theme;\n      state.user.avatarURL = payload.avatarURL;\n      state.isRefreshing = false;\n      state.error = null;\n      // toast.success('User Updated!');\n    }).addCase(editProfile.pending, state => {\n      state.isRefreshing = true;\n    }).addCase(editProfile.rejected, (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.isRefreshing = false;\n      state.error = payload;\n      toast.error(payload);\n    }).addCase(addCard.fulfilled, (state, action) => {\n      state.isLoading = false;\n      const index = state.currentDashboard.columns.findIndex(item => item._id === action.payload.owner);\n      if (!state.currentDashboard.columns[index].cards) {\n        state.currentDashboard.columns[index].cards = [];\n      }\n      state.currentDashboard.columns[index].cards.push(action.payload);\n      state.error = null;\n    }).addCase(deleteCard.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.error = null;\n      const indexColumn = state.currentDashboard.columns.findIndex(item => item._id === action.payload.owner);\n      const indexCard = state.currentDashboard.columns[indexColumn].cards.findIndex(item => item._id === action.payload._id);\n      state.currentDashboard.columns[indexColumn].cards.splice(indexCard, 1);\n      state.columnsLength = state.currentDashboard.columns.length;\n    }).addCase(editCard.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.error = null;\n      const {\n        _id,\n        title,\n        description,\n        priority,\n        deadline,\n        owner\n      } = action.payload;\n      const indexColumn = state.currentDashboard.columns.findIndex(item => item._id === owner);\n      const indexCard = state.currentDashboard.columns[indexColumn].cards.findIndex(item => item._id === _id);\n      state.currentDashboard.columns[indexColumn].cards[indexCard] = {\n        ...state.currentDashboard.columns[indexColumn].cards[indexCard],\n        title,\n        description,\n        priority,\n        deadline\n      };\n      state.columnsLength = state.currentDashboard.columns.length;\n    });\n  }\n});\nexport const authReducer = authSlice.reducer;","map":{"version":3,"names":["createSlice","toast","register","logIn","logOut","refreshUser","editProfile","addCard","deleteCard","editCard","initialState","user","name","email","token","isLoggedIn","isRefreshing","authSlice","extraReducers","builder","addCase","fulfilled","state","action","payload","_ref","console","log","avatarURL","error","pending","rejected","_ref2","isLoading","index","currentDashboard","columns","findIndex","item","_id","owner","cards","push","indexColumn","indexCard","splice","columnsLength","length","title","description","priority","deadline","authReducer","reducer"],"sources":["/Users/vlasvin/Documents/GitHub/TaskPro-FrontEnd-Team5/src/store/auth/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\n\nimport {\n  register,\n  logIn,\n  logOut,\n  refreshUser,\n  editProfile,\n} from '../auth/authOperations';\nimport {\n  addCard,\n  deleteCard,\n  editCard,\n} from 'store/dashboards/dashboardsOperations';\n\nconst initialState = {\n  user: { name: '', email: '' },\n  token: null,\n  isLoggedIn: false,\n  isRefreshing: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: builder => {\n    builder\n      .addCase(register.fulfilled, (state, action) => {\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n        state.isLoggedIn = true;\n      })\n      .addCase(logIn.fulfilled, (state, action) => {\n        if (action.payload) {\n          state.user = action.payload.user;\n          state.token = action.payload.token;\n          state.isLoggedIn = true;\n        }\n      })\n      .addCase(logOut.fulfilled, (state, action) => {\n        state.user = { name: '', email: '' };\n        state.token = '';\n        state.isLoggedIn = false;\n      })\n      .addCase(refreshUser.fulfilled, (state, action) => {\n        state.user = action.payload;\n        state.isLoggedIn = true;\n      })\n      .addCase(editProfile.fulfilled, (state, { payload }) => {\n        console.log('payload: ', payload);\n        state.user.name = payload.name;\n        state.user.email = payload.email;\n        // state.user.theme = payload.theme;\n        state.user.avatarURL = payload.avatarURL;\n        state.isRefreshing = false;\n        state.error = null;\n        // toast.success('User Updated!');\n      })\n      .addCase(editProfile.pending, state => {\n        state.isRefreshing = true;\n      })\n      .addCase(editProfile.rejected, (state, { payload }) => {\n        state.isRefreshing = false;\n        state.error = payload;\n        toast.error(payload);\n      })\n      .addCase(addCard.fulfilled, (state, action) => {\n        state.isLoading = false;\n\n        const index = state.currentDashboard.columns.findIndex(\n          item => item._id === action.payload.owner\n        );\n\n        if (!state.currentDashboard.columns[index].cards) {\n          state.currentDashboard.columns[index].cards = [];\n        }\n\n        state.currentDashboard.columns[index].cards.push(action.payload);\n\n        state.error = null;\n      })\n      .addCase(deleteCard.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.error = null;\n\n        const indexColumn = state.currentDashboard.columns.findIndex(\n          item => item._id === action.payload.owner\n        );\n\n        const indexCard = state.currentDashboard.columns[\n          indexColumn\n        ].cards.findIndex(item => item._id === action.payload._id);\n\n        state.currentDashboard.columns[indexColumn].cards.splice(indexCard, 1);\n        state.columnsLength = state.currentDashboard.columns.length;\n      })\n      .addCase(editCard.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.error = null;\n\n        const { _id, title, description, priority, deadline, owner } =\n          action.payload;\n\n        const indexColumn = state.currentDashboard.columns.findIndex(\n          item => item._id === owner\n        );\n\n        const indexCard = state.currentDashboard.columns[\n          indexColumn\n        ].cards.findIndex(item => item._id === _id);\n\n        state.currentDashboard.columns[indexColumn].cards[indexCard] = {\n          ...state.currentDashboard.columns[indexColumn].cards[indexCard],\n          title,\n          description,\n          priority,\n          deadline,\n        };\n        state.columnsLength = state.currentDashboard.columns.length;\n      });\n  },\n});\n\nexport const authReducer = authSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}