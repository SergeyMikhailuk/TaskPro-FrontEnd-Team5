{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport { register, logIn, logOut, refreshUser, editProfile } from 'store/auth/authOperations';\nimport { addCard, deleteCard, editCard } from 'store/dashboards/dashboardsOperations';\nconst initialState = {\n  user: {\n    name: '',\n    email: ''\n  },\n  token: null,\n  isLoggedIn: false,\n  isRefreshing: false\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearState: () => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(register.fulfilled, (state, action) => {\n      const {\n        user\n      } = action.payload;\n      state.user = user;\n      state.token = user.token;\n      state.isLoggedIn = true;\n    }).addCase(logIn.fulfilled, (state, action) => {\n      const {\n        user,\n        token\n      } = action.payload;\n      state.user = user;\n      state.token = token;\n      state.isLoggedIn = true;\n    }).addCase(logOut.fulfilled, state => {\n      state.user = initialState.user;\n      state.token = initialState.token;\n      state.isLoggedIn = false;\n    }).addCase(refreshUser.fulfilled, (state, action) => {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n    }).addCase(editProfile.fulfilled, (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      const {\n        name,\n        email,\n        avatarURL\n      } = payload;\n      state.user.name = name;\n      state.user.email = email;\n      state.user.avatarURL = avatarURL;\n      state.isRefreshing = false;\n      state.error = null;\n    }).addCase(editProfile.pending, state => {\n      state.isRefreshing = true;\n    }).addCase(editProfile.rejected, (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.isRefreshing = false;\n      state.error = payload;\n      toast.error(payload);\n    }).addCase(addCard.fulfilled, (state, action) => {\n      const {\n        owner\n      } = action.payload;\n      const index = state.currentDashboard.columns.findIndex(item => item._id === owner);\n      const {\n        cards\n      } = state.currentDashboard.columns[index];\n      if (!cards) {\n        state.currentDashboard.columns[index].cards = [action.payload];\n      } else {\n        cards.push(action.payload);\n      }\n      state.error = null;\n    }).addCase(deleteCard.fulfilled, (state, action) => {\n      const {\n        owner,\n        _id\n      } = action.payload;\n      const indexColumn = state.currentDashboard.columns.findIndex(item => item._id === owner);\n      const {\n        cards\n      } = state.currentDashboard.columns[indexColumn];\n      const indexCard = cards.findIndex(item => item._id === _id);\n      cards.splice(indexCard, 1);\n      state.columnsLength = state.currentDashboard.columns.length;\n    }).addCase(editCard.fulfilled, (state, action) => {\n      const {\n        _id,\n        title,\n        description,\n        priority,\n        deadline,\n        owner\n      } = action.payload;\n      const indexColumn = state.currentDashboard.columns.findIndex(item => item._id === owner);\n      const {\n        cards\n      } = state.currentDashboard.columns[indexColumn];\n      const indexCard = cards.findIndex(item => item._id === _id);\n      const updatedCard = {\n        ...cards[indexCard],\n        title,\n        description,\n        priority,\n        deadline\n      };\n      cards[indexCard] = updatedCard;\n      state.columnsLength = state.currentDashboard.columns.length;\n    });\n  }\n});\nexport const {\n  clearState\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","toast","register","logIn","logOut","refreshUser","editProfile","addCard","deleteCard","editCard","initialState","user","name","email","token","isLoggedIn","isRefreshing","authSlice","reducers","clearState","extraReducers","builder","addCase","fulfilled","state","action","payload","_ref","avatarURL","error","pending","rejected","_ref2","owner","index","currentDashboard","columns","findIndex","item","_id","cards","push","indexColumn","indexCard","splice","columnsLength","length","title","description","priority","deadline","updatedCard","actions","reducer"],"sources":["/Users/vlasvin/Documents/GitHub/TaskPro-FrontEnd-Team5/src/store/index.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { toast } from 'react-toastify';\nimport {\n  register,\n  logIn,\n  logOut,\n  refreshUser,\n  editProfile,\n} from 'store/auth/authOperations';\nimport {\n  addCard,\n  deleteCard,\n  editCard,\n} from 'store/dashboards/dashboardsOperations';\n\nconst initialState = {\n  user: { name: '', email: '' },\n  token: null,\n  isLoggedIn: false,\n  isRefreshing: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearState: () => initialState,\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(register.fulfilled, (state, action) => {\n        const { user } = action.payload;\n        state.user = user;\n        state.token = user.token;\n        state.isLoggedIn = true;\n      })\n      .addCase(logIn.fulfilled, (state, action) => {\n        const { user, token } = action.payload;\n        state.user = user;\n        state.token = token;\n        state.isLoggedIn = true;\n      })\n      .addCase(logOut.fulfilled, state => {\n        state.user = initialState.user;\n        state.token = initialState.token;\n        state.isLoggedIn = false;\n      })\n      .addCase(refreshUser.fulfilled, (state, action) => {\n        state.user = action.payload;\n        state.isLoggedIn = true;\n      })\n      .addCase(editProfile.fulfilled, (state, { payload }) => {\n        const { name, email, avatarURL } = payload;\n        state.user.name = name;\n        state.user.email = email;\n        state.user.avatarURL = avatarURL;\n        state.isRefreshing = false;\n        state.error = null;\n      })\n      .addCase(editProfile.pending, state => {\n        state.isRefreshing = true;\n      })\n      .addCase(editProfile.rejected, (state, { payload }) => {\n        state.isRefreshing = false;\n        state.error = payload;\n        toast.error(payload);\n      })\n      .addCase(addCard.fulfilled, (state, action) => {\n        const { owner } = action.payload;\n        const index = state.currentDashboard.columns.findIndex(\n          item => item._id === owner\n        );\n        const { cards } = state.currentDashboard.columns[index];\n        if (!cards) {\n          state.currentDashboard.columns[index].cards = [action.payload];\n        } else {\n          cards.push(action.payload);\n        }\n        state.error = null;\n      })\n      .addCase(deleteCard.fulfilled, (state, action) => {\n        const { owner, _id } = action.payload;\n        const indexColumn = state.currentDashboard.columns.findIndex(\n          item => item._id === owner\n        );\n        const { cards } = state.currentDashboard.columns[indexColumn];\n        const indexCard = cards.findIndex(item => item._id === _id);\n        cards.splice(indexCard, 1);\n        state.columnsLength = state.currentDashboard.columns.length;\n      })\n      .addCase(editCard.fulfilled, (state, action) => {\n        const { _id, title, description, priority, deadline, owner } =\n          action.payload;\n        const indexColumn = state.currentDashboard.columns.findIndex(\n          item => item._id === owner\n        );\n        const { cards } = state.currentDashboard.columns[indexColumn];\n        const indexCard = cards.findIndex(item => item._id === _id);\n        const updatedCard = {\n          ...cards[indexCard],\n          title,\n          description,\n          priority,\n          deadline,\n        };\n        cards[indexCard] = updatedCard;\n        state.columnsLength = state.currentDashboard.columns.length;\n      });\n  },\n});\n\nexport const { clearState } = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}