{"ast":null,"code":"var _jsxFileName = \"/Users/vlasvin/Documents/GitHub/TaskPro-FrontEnd-Team5/src/components/Header/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleSidebar } from 'store/sidebarSlice';\nimport { getThemeName, setTheme } from 'store/themeSlice';\nimport { selectIsLoading } from 'store/auth/authSelectors';\nimport UserModal from 'components/ModalWindows/UserModal/UserModal';\nimport userDark from 'images/user-dark.svg';\nimport userLight from 'images/user-light.svg';\nimport userViolet from 'images/user-violet.svg';\nimport { ReactModal } from 'components/ModalWindows/Modal/Modal';\nimport Loader from 'components/Loader/Loader';\nimport { AppHeader, Burger, Info, ButtonMenu, StyledSelectWrapper, StyledList, StyledItem, StyledTitle, Down, UserAvatar, UserName, Wrapper } from './styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst themes = [{\n  name: 'Light',\n  value: 'light'\n}, {\n  name: 'Dark',\n  value: 'dark'\n}, {\n  name: 'Violet',\n  value: 'violet'\n}];\nconst Header = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [isThemeOpen, setIsThemeOpen] = useState(false);\n  const [isEditProfileModalOpen, setIsEditProfileModalOpen] = useState(false); // Додаємо стейт для модального вікна\n  const user = useSelector(state => state.auth.user);\n  const selectHandler = _ref => {\n    let {\n      value\n    } = _ref;\n    dispatch(setTheme(value));\n    setIsThemeOpen(false);\n  };\n  const handleToggleSidebar = () => {\n    dispatch(toggleSidebar());\n  };\n  const handleOpenEditProfileModal = () => {\n    setIsEditProfileModalOpen(true);\n  };\n  const handleCloseEditProfileModal = () => {\n    setIsEditProfileModalOpen(false);\n  };\n  const isLoading = useSelector(selectIsLoading);\n  const activeUserTheme = useSelector(getThemeName);\n  const setDefaultAvatar = () => {\n    if (activeUserTheme === 'dark') {\n      return userDark;\n    } else if (activeUserTheme === 'light') {\n      return userLight;\n    } else if (activeUserTheme === 'violet') {\n      return userViolet;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppHeader, {\n    children: [/*#__PURE__*/_jsxDEV(ButtonMenu, {\n      onClick: handleToggleSidebar,\n      children: /*#__PURE__*/_jsxDEV(Burger, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Info, {\n      children: [/*#__PURE__*/_jsxDEV(StyledSelectWrapper, {\n        onClick: () => setIsThemeOpen(!isThemeOpen),\n        children: [/*#__PURE__*/_jsxDEV(StyledTitle, {\n          children: \"Theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Down, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), isThemeOpen && /*#__PURE__*/_jsxDEV(StyledList, {\n          $isOpen: isThemeOpen,\n          children: themes.map(_ref2 => {\n            let {\n              value,\n              name\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(StyledItem, {\n              onClick: () => selectHandler({\n                value\n              }),\n              children: name\n            }, value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(UserName, {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(UserAvatar, {\n          src: user.avatarURL || setDefaultAvatar(),\n          alt: \"user name\",\n          onClick: handleOpenEditProfileModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n      isOpen: isEditProfileModalOpen,\n      title: \"Edit Profile\",\n      closeModal: handleCloseEditProfileModal,\n      onRequestClose: handleCloseEditProfileModal,\n      children: /*#__PURE__*/_jsxDEV(UserModal, {\n        user: user,\n        closeModal: handleCloseEditProfileModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"mLCB1C+8A7qxqN5xduFyM+y6SvY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","toggleSidebar","getThemeName","setTheme","selectIsLoading","UserModal","userDark","userLight","userViolet","ReactModal","Loader","AppHeader","Burger","Info","ButtonMenu","StyledSelectWrapper","StyledList","StyledItem","StyledTitle","Down","UserAvatar","UserName","Wrapper","jsxDEV","_jsxDEV","themes","name","value","Header","_s","dispatch","isThemeOpen","setIsThemeOpen","isEditProfileModalOpen","setIsEditProfileModalOpen","user","state","auth","selectHandler","_ref","handleToggleSidebar","handleOpenEditProfileModal","handleCloseEditProfileModal","isLoading","activeUserTheme","setDefaultAvatar","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","$isOpen","map","_ref2","src","avatarURL","alt","isOpen","title","closeModal","onRequestClose","_c","$RefreshReg$"],"sources":["/Users/vlasvin/Documents/GitHub/TaskPro-FrontEnd-Team5/src/components/Header/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleSidebar } from 'store/sidebarSlice';\nimport { getThemeName, setTheme } from 'store/themeSlice';\n\nimport { selectIsLoading } from 'store/auth/authSelectors';\n\nimport UserModal from 'components/ModalWindows/UserModal/UserModal';\nimport userDark from 'images/user-dark.svg';\nimport userLight from 'images/user-light.svg';\nimport userViolet from 'images/user-violet.svg';\n\nimport { ReactModal } from 'components/ModalWindows/Modal/Modal';\n\nimport Loader from 'components/Loader/Loader';\n\nimport {\n  AppHeader,\n  Burger,\n  Info,\n  ButtonMenu,\n  StyledSelectWrapper,\n  StyledList,\n  StyledItem,\n  StyledTitle,\n  Down,\n  UserAvatar,\n  UserName,\n  Wrapper,\n} from './styled';\n\nconst themes = [\n  { name: 'Light', value: 'light' },\n  { name: 'Dark', value: 'dark' },\n  { name: 'Violet', value: 'violet' },\n];\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const [isThemeOpen, setIsThemeOpen] = useState(false);\n  const [isEditProfileModalOpen, setIsEditProfileModalOpen] = useState(false); // Додаємо стейт для модального вікна\n  const user = useSelector(state => state.auth.user);\n\n  const selectHandler = ({ value }) => {\n    dispatch(setTheme(value));\n    setIsThemeOpen(false);\n  };\n\n  const handleToggleSidebar = () => {\n    dispatch(toggleSidebar());\n  };\n\n  const handleOpenEditProfileModal = () => {\n    setIsEditProfileModalOpen(true);\n  };\n\n  const handleCloseEditProfileModal = () => {\n    setIsEditProfileModalOpen(false);\n  };\n  const isLoading = useSelector(selectIsLoading);\n\n  const activeUserTheme = useSelector(getThemeName);\n\n  const setDefaultAvatar = () => {\n    if (activeUserTheme === 'dark') {\n      return userDark;\n    } else if (activeUserTheme === 'light') {\n      return userLight;\n    } else if (activeUserTheme === 'violet') {\n      return userViolet;\n    }\n  };\n\n  return (\n    <AppHeader>\n      <ButtonMenu onClick={handleToggleSidebar}>\n        <Burger />\n      </ButtonMenu>\n      <Info>\n        <StyledSelectWrapper onClick={() => setIsThemeOpen(!isThemeOpen)}>\n          <StyledTitle>Theme</StyledTitle>\n          <Down />\n          {isThemeOpen && (\n            <StyledList $isOpen={isThemeOpen}>\n              {themes.map(({ value, name }) => (\n                <StyledItem\n                  key={value}\n                  onClick={() => selectHandler({ value })}\n                >\n                  {name}\n                </StyledItem>\n              ))}\n            </StyledList>\n          )}\n        </StyledSelectWrapper>\n\n        <Wrapper>\n          <UserName>{user.name}</UserName>\n\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <UserAvatar\n              src={user.avatarURL || setDefaultAvatar()}\n              alt=\"user name\"\n              onClick={handleOpenEditProfileModal}\n            />\n          )}\n        </Wrapper>\n      </Info>\n\n      <ReactModal\n        isOpen={isEditProfileModalOpen}\n        title=\"Edit Profile\"\n        closeModal={handleCloseEditProfileModal}\n        onRequestClose={handleCloseEditProfileModal}\n      >\n        <UserModal user={user} closeModal={handleCloseEditProfileModal} />\n      </ReactModal>\n    </AppHeader>\n  );\n};\n\nexport default Header;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}