{"ast":null,"code":"var _jsxFileName = \"/Users/vlasvin/Documents/GitHub/TaskPro-FrontEnd-Team5/src/components/Board/Column/Column.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDeleteTodosMutation } from 'store/cardsSlice';\nimport Card from 'components/Board/Cards/Cards';\nimport { ModalColumn } from 'components/ModalWindows/ColumnModals';\nimport CardModal from 'components/ModalWindows/CardModals/CardModal';\nimport { ReactModal } from 'components/ModalWindows/Modal/Modal';\nimport { Wrapper, Header, Button, ButtonPlus, TaskList, ButtonWrapper, Content, Title, ContentWrapper, ButtonEdit, ButtonDelete, CardsBtnDelete, CardstBtnEdit, AddCardCreateBtn } from './styled';\nimport { useDeleteColumnMutation } from 'store/columnsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Column = _ref => {\n  _s();\n  let {\n    item\n  } = _ref;\n  const [isOpenColumnModal, setIsOpenColumnModal] = useState(false);\n  const [isOpenCardModal, setIsOpenCardModal] = useState(false);\n  const [deleteCard] = useDeleteTodosMutation();\n  const [deleteColumn] = useDeleteColumnMutation();\n  const handleOpenColumnModal = () => {\n    setIsOpenColumnModal(true);\n  };\n  const handleCloseColumnModal = () => {\n    setIsOpenColumnModal(false);\n  };\n  const handleOpenCardModal = () => {\n    setIsOpenCardModal(true);\n  };\n  const handleCloseCardModal = () => {\n    setIsOpenCardModal(false);\n  };\n  const handleDeleteCard = async cardId => {\n    try {\n      await deleteCard({\n        todoId: cardId\n      });\n    } catch (error) {\n      console.error('Error deleting card:', error);\n    }\n  };\n  const handleDeleteColumn = async () => {\n    try {\n      await deleteColumn({\n        columnId: item._id\n      });\n    } catch (error) {\n      console.error('Error deleting column:', error);\n    }\n  };\n  const filter = useSelector(state => state.filter);\n  const filterCards = () => {\n    var _item$todos;\n    return item === null || item === void 0 ? void 0 : (_item$todos = item.todos) === null || _item$todos === void 0 ? void 0 : _item$todos.filter(card => {\n      if (filter === 'all') {\n        return card;\n      }\n      return card.priority.toLowerCase() === filter;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(ContentWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Content, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(ButtonEdit, {\n              children: /*#__PURE__*/_jsxDEV(CardstBtnEdit, {\n                onClick: handleOpenColumnModal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonDelete, {\n              children: /*#__PURE__*/_jsxDEV(CardsBtnDelete, {\n                onClick: handleDeleteColumn\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          children: filterCards().map(todo => /*#__PURE__*/_jsxDEV(Card, {\n            item: todo,\n            columnName: item.title,\n            onDeleteCard: handleDeleteCard\n          }, todo._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleOpenCardModal,\n        children: [/*#__PURE__*/_jsxDEV(ButtonPlus, {\n          children: /*#__PURE__*/_jsxDEV(AddCardCreateBtn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), \"Add another card\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n      isOpen: isOpenColumnModal,\n      title: \"Edit Column\",\n      closeModal: handleCloseColumnModal,\n      onRequestClose: handleCloseColumnModal,\n      children: /*#__PURE__*/_jsxDEV(ModalColumn, {\n        typeModal: 'edit',\n        closeModal: handleCloseColumnModal,\n        columnId: item._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n      isOpen: isOpenCardModal,\n      title: \"Add Card\",\n      closeModal: handleCloseCardModal,\n      onRequestClose: handleCloseCardModal,\n      children: /*#__PURE__*/_jsxDEV(CardModal, {\n        typeModal: 'add',\n        card: item,\n        columnId: item._id,\n        closeModal: handleCloseCardModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Column, \"wreh1Tdc/tK7Yr//b7unJ43lOtY=\", false, function () {\n  return [useDeleteTodosMutation, useDeleteColumnMutation, useSelector];\n});\n_c = Column;\nvar _c;\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"names":["React","useState","useSelector","useDeleteTodosMutation","Card","ModalColumn","CardModal","ReactModal","Wrapper","Header","Button","ButtonPlus","TaskList","ButtonWrapper","Content","Title","ContentWrapper","ButtonEdit","ButtonDelete","CardsBtnDelete","CardstBtnEdit","AddCardCreateBtn","useDeleteColumnMutation","jsxDEV","_jsxDEV","Column","_ref","_s","item","isOpenColumnModal","setIsOpenColumnModal","isOpenCardModal","setIsOpenCardModal","deleteCard","deleteColumn","handleOpenColumnModal","handleCloseColumnModal","handleOpenCardModal","handleCloseCardModal","handleDeleteCard","cardId","todoId","error","console","handleDeleteColumn","columnId","_id","filter","state","filterCards","_item$todos","todos","card","priority","toLowerCase","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","todo","columnName","onDeleteCard","isOpen","closeModal","onRequestClose","typeModal","_c","$RefreshReg$"],"sources":["/Users/vlasvin/Documents/GitHub/TaskPro-FrontEnd-Team5/src/components/Board/Column/Column.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { useDeleteTodosMutation } from 'store/cardsSlice';\nimport Card from 'components/Board/Cards/Cards';\nimport { ModalColumn } from 'components/ModalWindows/ColumnModals';\nimport CardModal from 'components/ModalWindows/CardModals/CardModal';\nimport { ReactModal } from 'components/ModalWindows/Modal/Modal';\n\nimport {\n  Wrapper,\n  Header,\n  Button,\n  ButtonPlus,\n  TaskList,\n  ButtonWrapper,\n  Content,\n  Title,\n  ContentWrapper,\n  ButtonEdit,\n  ButtonDelete,\n  CardsBtnDelete,\n  CardstBtnEdit,\n  AddCardCreateBtn,\n} from './styled';\nimport { useDeleteColumnMutation } from 'store/columnsSlice';\n\nexport const Column = ({ item }) => {\n  const [isOpenColumnModal, setIsOpenColumnModal] = useState(false);\n  const [isOpenCardModal, setIsOpenCardModal] = useState(false);\n  const [deleteCard] = useDeleteTodosMutation();\n  const [deleteColumn] = useDeleteColumnMutation();\n\n  const handleOpenColumnModal = () => {\n    setIsOpenColumnModal(true);\n  };\n\n  const handleCloseColumnModal = () => {\n    setIsOpenColumnModal(false);\n  };\n\n  const handleOpenCardModal = () => {\n    setIsOpenCardModal(true);\n  };\n\n  const handleCloseCardModal = () => {\n    setIsOpenCardModal(false);\n  };\n\n  const handleDeleteCard = async cardId => {\n    try {\n      await deleteCard({ todoId: cardId });\n    } catch (error) {\n      console.error('Error deleting card:', error);\n    }\n  };\n\n  const handleDeleteColumn = async () => {\n    try {\n      await deleteColumn({ columnId: item._id });\n    } catch (error) {\n      console.error('Error deleting column:', error);\n    }\n  };\n\n  const filter = useSelector(state => state.filter);\n  const filterCards = () => {\n    return item?.todos?.filter(card => {\n      if (filter === 'all') {\n        return card;\n      }\n      return card.priority.toLowerCase() === filter;\n    });\n  };\n\n  return (\n    <Wrapper>\n      <ContentWrapper>\n        <Content>\n          <Header>\n            <Title>{item.title}</Title>\n            <ButtonWrapper>\n              <ButtonEdit>\n                <CardstBtnEdit onClick={handleOpenColumnModal} />\n              </ButtonEdit>\n              <ButtonDelete>\n                <CardsBtnDelete onClick={handleDeleteColumn} />\n              </ButtonDelete>\n            </ButtonWrapper>\n          </Header>\n\n          <TaskList>\n            {filterCards().map(todo => (\n              <Card\n                key={todo._id}\n                item={todo}\n                columnName={item.title}\n                onDeleteCard={handleDeleteCard}\n              />\n            ))}\n          </TaskList>\n        </Content>\n\n        <Button onClick={handleOpenCardModal}>\n          <ButtonPlus>\n            <AddCardCreateBtn />\n          </ButtonPlus>\n          Add another card\n        </Button>\n      </ContentWrapper>\n\n      <ReactModal\n        isOpen={isOpenColumnModal}\n        title=\"Edit Column\"\n        closeModal={handleCloseColumnModal}\n        onRequestClose={handleCloseColumnModal}\n      >\n        <ModalColumn\n          typeModal={'edit'}\n          closeModal={handleCloseColumnModal}\n          columnId={item._id}\n        />\n      </ReactModal>\n\n      <ReactModal\n        isOpen={isOpenCardModal}\n        title=\"Add Card\"\n        closeModal={handleCloseCardModal}\n        onRequestClose={handleCloseCardModal}\n      >\n        <CardModal\n          typeModal={'add'}\n          card={item}\n          columnId={item._id}\n          closeModal={handleCloseCardModal}\n        />\n      </ReactModal>\n    </Wrapper>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}