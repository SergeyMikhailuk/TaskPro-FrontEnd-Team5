{"ast":null,"code":"var _jsxFileName = \"/Users/vlasvin/Documents/GitHub/TaskPro-FrontEnd-Team5/src/pages/Board/index.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useGetBoardByIdQuery, useGetBoardsQuery } from 'store/boardsSlice';\nimport { Column } from 'components/Board/Column/Column';\nimport { ReactModal } from 'components/ModalWindows/Modal/Modal';\nimport { ModalColumn } from 'components/ModalWindows/ColumnModals';\nimport { Filter } from 'components/Filter/Filter';\nimport { WrapperMain, Header, AddIcon, Title, AddButton, IconWrapper, Text, ContentWrapper, Wrapper } from './styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardPage = () => {\n  _s2();\n  var _boardsData$, _boardData$board, _boardData$board2, _boardData$columns, _boardData$columns2;\n  const [isOpenColumnModal, setIsOpenColumnModal] = useState(false);\n  const [boardData, setBoardData] = useState(null);\n  const {\n    data: boardsData\n  } = useGetBoardsQuery();\n  const currentId = (_boardsData$ = boardsData[0]) === null || _boardsData$ === void 0 ? void 0 : _boardsData$._id;\n  const activeBoardId = useSelector(store => store.activeBoardId) || currentId;\n  useEffect(() => {\n    var _s = $RefreshSig$();\n    const fetchBoardData = async () => {\n      _s();\n      if (activeBoardId) {\n        const {\n          data\n        } = await useGetBoardByIdQuery(activeBoardId);\n        setBoardData(data);\n      }\n    };\n    _s(fetchBoardData, \"6wwsdIu+AzpVZXb8QxVQejVXO1E=\", false, function () {\n      return [useGetBoardByIdQuery];\n    });\n    fetchBoardData();\n  }, [activeBoardId]);\n  const scrollRef = useRef(null);\n  const handleOpenColumnModal = () => {\n    setIsOpenColumnModal(true);\n  };\n  const handleCloseColumnModal = () => {\n    setIsOpenColumnModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(WrapperMain, {\n    $url: boardData === null || boardData === void 0 ? void 0 : (_boardData$board = boardData.board) === null || _boardData$board === void 0 ? void 0 : _boardData$board.backgroundURL,\n    children: [/*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          children: boardData === null || boardData === void 0 ? void 0 : (_boardData$board2 = boardData.board) === null || _boardData$board2 === void 0 ? void 0 : _boardData$board2.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      ref: scrollRef,\n      children: [/*#__PURE__*/_jsxDEV(ContentWrapper, {\n        children: [boardData === null || boardData === void 0 ? void 0 : (_boardData$columns = boardData.columns) === null || _boardData$columns === void 0 ? void 0 : _boardData$columns.map(column => /*#__PURE__*/_jsxDEV(Column, {\n          item: column,\n          activeBoardId: activeBoardId\n        }, column._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(AddButton, {\n          onClick: handleOpenColumnModal,\n          $length: boardData === null || boardData === void 0 ? void 0 : (_boardData$columns2 = boardData.columns) === null || _boardData$columns2 === void 0 ? void 0 : _boardData$columns2.length,\n          type: \"button\",\n          children: [/*#__PURE__*/_jsxDEV(IconWrapper, {\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Add another column\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n        isOpen: isOpenColumnModal,\n        title: \"Add Column\",\n        closeModal: handleCloseColumnModal,\n        onRequestClose: handleCloseColumnModal,\n        children: /*#__PURE__*/_jsxDEV(ModalColumn, {\n          typeModal: 'add',\n          activeBoardId: activeBoardId,\n          closeModal: handleCloseColumnModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s2(BoardPage, \"8xpJ7mAPh2FNCUCf/Pvax5diCtM=\", false, function () {\n  return [useGetBoardsQuery, useSelector];\n});\n_c = BoardPage;\nexport default BoardPage;\nvar _c;\n$RefreshReg$(_c, \"BoardPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useSelector","useGetBoardByIdQuery","useGetBoardsQuery","Column","ReactModal","ModalColumn","Filter","WrapperMain","Header","AddIcon","Title","AddButton","IconWrapper","Text","ContentWrapper","Wrapper","jsxDEV","_jsxDEV","BoardPage","_s2","_boardsData$","_boardData$board","_boardData$board2","_boardData$columns","_boardData$columns2","isOpenColumnModal","setIsOpenColumnModal","boardData","setBoardData","data","boardsData","currentId","_id","activeBoardId","store","_s","$RefreshSig$","fetchBoardData","scrollRef","handleOpenColumnModal","handleCloseColumnModal","$url","board","backgroundURL","children","fileName","_jsxFileName","lineNumber","columnNumber","title","ref","columns","map","column","item","onClick","$length","length","type","isOpen","closeModal","onRequestClose","typeModal","_c","$RefreshReg$"],"sources":["/Users/vlasvin/Documents/GitHub/TaskPro-FrontEnd-Team5/src/pages/Board/index.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { useGetBoardByIdQuery, useGetBoardsQuery } from 'store/boardsSlice';\nimport { Column } from 'components/Board/Column/Column';\nimport { ReactModal } from 'components/ModalWindows/Modal/Modal';\nimport { ModalColumn } from 'components/ModalWindows/ColumnModals';\nimport { Filter } from 'components/Filter/Filter';\n\nimport {\n  WrapperMain,\n  Header,\n  AddIcon,\n  Title,\n  AddButton,\n  IconWrapper,\n  Text,\n  ContentWrapper,\n  Wrapper,\n} from './styled';\n\nconst BoardPage = () => {\n  const [isOpenColumnModal, setIsOpenColumnModal] = useState(false);\n  const [boardData, setBoardData] = useState(null);\n  const { data: boardsData } = useGetBoardsQuery();\n  const currentId = boardsData[0]?._id;\n  const activeBoardId = useSelector(store => store.activeBoardId) || currentId;\n\n  useEffect(() => {\n    const fetchBoardData = async () => {\n      if (activeBoardId) {\n        const { data } = await useGetBoardByIdQuery(activeBoardId);\n        setBoardData(data);\n      }\n    };\n\n    fetchBoardData();\n  }, [activeBoardId]);\n\n  const scrollRef = useRef(null);\n\n  const handleOpenColumnModal = () => {\n    setIsOpenColumnModal(true);\n  };\n\n  const handleCloseColumnModal = () => {\n    setIsOpenColumnModal(false);\n  };\n\n  return (\n    <WrapperMain $url={boardData?.board?.backgroundURL}>\n      <Filter />\n      <Header>\n        <div>\n          <Title>{boardData?.board?.title}</Title>\n        </div>\n      </Header>\n\n      <Wrapper ref={scrollRef}>\n        <ContentWrapper>\n          {boardData?.columns?.map(column => (\n            <Column\n              key={column._id}\n              item={column}\n              activeBoardId={activeBoardId}\n            />\n          ))}\n          <AddButton\n            onClick={handleOpenColumnModal}\n            $length={boardData?.columns?.length}\n            type=\"button\"\n          >\n            <IconWrapper>\n              <AddIcon />\n            </IconWrapper>\n            <Text>Add another column</Text>\n          </AddButton>\n        </ContentWrapper>\n        <Filter></Filter>\n        <ReactModal\n          isOpen={isOpenColumnModal}\n          title=\"Add Column\"\n          closeModal={handleCloseColumnModal}\n          onRequestClose={handleCloseColumnModal}\n        >\n          <ModalColumn\n            typeModal={'add'}\n            activeBoardId={activeBoardId}\n            closeModal={handleCloseColumnModal}\n          />\n        </ReactModal>\n      </Wrapper>\n    </WrapperMain>\n  );\n};\n\nexport default BoardPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}