{"ast":null,"code":"var _jsxFileName = \"/Users/vlasvin/Documents/GitHub/TaskPro-FrontEnd-Team5/src/components/ModalWindows/ColumnModals/index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useCreateColumnMutation, useUpdateColumnMutation } from 'store/columnsSlice';\nimport { ModalContainer, ModalFormikBox, ModalFormikBoxInput, ModalFormikBoxBtn, ModalFormikBoxBtnIcon, ErrorText } from './styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalColumn = _ref => {\n  _s();\n  let {\n    typeModal,\n    closeModal,\n    activeBoardId,\n    columnId,\n    column\n  } = _ref;\n  const initialValues = {\n    title: typeModal === 'edit' ? column.title : 'Title'\n  };\n  const [createColumn] = useCreateColumnMutation();\n  const [updateColumn] = useUpdateColumnMutation();\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required('Title is required')\n  });\n  const handleSubmit = async (values, _ref2) => {\n    let {\n      resetForm\n    } = _ref2;\n    try {\n      if (typeModal === 'add') {\n        await createColumn({\n          boardId: activeBoardId,\n          column: values\n        });\n      } else if (typeModal === 'edit') {\n        await updateColumn({\n          columnId,\n          column: values\n        });\n      }\n      resetForm();\n      closeModal();\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ModalContainer, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: handleSubmit,\n      validationSchema: validationSchema,\n      children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: formikProps.handleSubmit,\n        children: [' ', /*#__PURE__*/_jsxDEV(ModalFormikBox, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            name: \"title\",\n            as: ModalFormikBoxInput,\n            placeholder: \"Title\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"title\",\n            component: ErrorText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalFormikBoxBtn, {\n          type: \"submit\",\n          children: [/*#__PURE__*/_jsxDEV(ModalFormikBoxBtnIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), typeModal === 'add' ? 'Add' : 'Edit']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ModalColumn, \"hzMkOlZsagI3jZKcr+UPFy5aoLs=\", false, function () {\n  return [useCreateColumnMutation, useUpdateColumnMutation];\n});\n_c = ModalColumn;\nexport { ModalColumn };\nvar _c;\n$RefreshReg$(_c, \"ModalColumn\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","useCreateColumnMutation","useUpdateColumnMutation","ModalContainer","ModalFormikBox","ModalFormikBoxInput","ModalFormikBoxBtn","ModalFormikBoxBtnIcon","ErrorText","jsxDEV","_jsxDEV","ModalColumn","_ref","_s","typeModal","closeModal","activeBoardId","columnId","column","initialValues","title","createColumn","updateColumn","validationSchema","object","shape","string","required","handleSubmit","values","_ref2","resetForm","boardId","error","console","children","onSubmit","formikProps","type","name","as","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","component","_c","$RefreshReg$"],"sources":["/Users/vlasvin/Documents/GitHub/TaskPro-FrontEnd-Team5/src/components/ModalWindows/ColumnModals/index.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  useCreateColumnMutation,\n  useUpdateColumnMutation,\n} from 'store/columnsSlice';\n\nimport {\n  ModalContainer,\n  ModalFormikBox,\n  ModalFormikBoxInput,\n  ModalFormikBoxBtn,\n  ModalFormikBoxBtnIcon,\n  ErrorText,\n} from './styled';\n\nconst ModalColumn = ({ typeModal, closeModal, activeBoardId, columnId, column }) => {\n  const initialValues = {\n    title: typeModal === 'edit' ? column.title : 'Title',\n  };\n\n  const [createColumn] = useCreateColumnMutation();\n  const [updateColumn] = useUpdateColumnMutation();\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required('Title is required'),\n  });\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      if (typeModal === 'add') {\n        await createColumn({ boardId: activeBoardId, column: values });\n      } else if (typeModal === 'edit') {\n        await updateColumn({ columnId, column: values });\n      }\n      resetForm();\n      closeModal();\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <ModalContainer>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={validationSchema}\n      >\n        {formikProps => (\n          <Form onSubmit={formikProps.handleSubmit}>\n            {' '}\n            <ModalFormikBox>\n              <Field\n                type=\"text\"\n                name=\"title\"\n                as={ModalFormikBoxInput}\n                placeholder=\"Title\"\n                required\n              />\n              <ErrorMessage name=\"title\" component={ErrorText} />{' '}\n            </ModalFormikBox>\n            <ModalFormikBoxBtn type=\"submit\">\n              <ModalFormikBoxBtnIcon />\n              {typeModal === 'add' ? 'Add' : 'Edit'}\n            </ModalFormikBoxBtn>\n          </Form>\n        )}\n      </Formik>\n    </ModalContainer>\n  );\n};\n\nexport { ModalColumn };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}