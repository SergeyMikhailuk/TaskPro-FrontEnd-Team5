{"ast":null,"code":"import { createApi } from '@reduxjs/toolkit/query/react';\nimport { baseQuery } from './baseQuery';\nimport { boardsApi } from './boardsSlice';\nexport const todosApi = createApi({\n  reducerPath: 'todosApi',\n  baseQuery: baseQuery,\n  tagTypes: ['Todos'],\n  endpoints: build => ({\n    getTodo: build.query({\n      query: todoId => ({\n        url: `/api/todos/${todoId}`,\n        method: 'GET'\n      }),\n      providesTags: ['Todos']\n    }),\n    createTodos: build.mutation({\n      query: _ref => {\n        let {\n          todo,\n          columnId\n        } = _ref;\n        return {\n          url: `/api/todos/${columnId}`,\n          method: 'POST',\n          body: todo\n        };\n      },\n      invalidatesTags: ['Todos'],\n      onQueryStarted: async (arg, _ref2) => {\n        let {\n          dispatch,\n          queryFulfilled\n        } = _ref2;\n        const {\n          data\n        } = await queryFulfilled;\n        if (data) {\n          dispatch(boardsApi.util.invalidateTags(['Board']));\n        }\n      }\n    }),\n    updateTodos: build.mutation({\n      query: _ref3 => {\n        let {\n          todoId,\n          ...rest\n        } = _ref3;\n        return {\n          url: `/api/todos/${todoId}`,\n          method: 'PATCH',\n          body: rest\n        };\n      },\n      invalidatesTags: ['Todos'],\n      onQueryStarted: async (arg, _ref4) => {\n        let {\n          dispatch,\n          queryFulfilled\n        } = _ref4;\n        const {\n          data\n        } = await queryFulfilled;\n        if (data) {\n          dispatch(boardsApi.util.invalidateTags(['Board']));\n        }\n      }\n    }),\n    deleteTodos: build.mutation({\n      query: _ref5 => {\n        let {\n          todoId\n        } = _ref5;\n        return {\n          url: `/api/todos/${todoId}`,\n          method: 'DELETE'\n        };\n      },\n      invalidatesTags: ['Todos'],\n      onQueryStarted: async (arg, _ref6) => {\n        let {\n          dispatch,\n          queryFulfilled\n        } = _ref6;\n        const {\n          data\n        } = await queryFulfilled;\n        if (data) {\n          dispatch(boardsApi.util.invalidateTags(['Board']));\n        }\n      }\n    }),\n    changeTodosColumn: build.mutation({\n      query: _ref7 => {\n        let {\n          todoId,\n          columnId\n        } = _ref7;\n        return {\n          url: `/api/todos/${todoId}/owner/${columnId}`,\n          method: 'PATCH'\n        };\n      },\n      invalidatesTags: ['Todos'],\n      onQueryStarted: async (arg, _ref8) => {\n        let {\n          dispatch,\n          queryFulfilled\n        } = _ref8;\n        const {\n          data\n        } = await queryFulfilled;\n        console.log(data);\n        if (data) {\n          dispatch(boardsApi.util.invalidateTags(['Board']));\n        }\n      }\n    })\n  })\n});\nexport const {\n  useGetTodoQuery,\n  useCreateTodosMutation,\n  useUpdateTodosMutation,\n  useDeleteTodosMutation,\n  useChangeTodosColumnMutation\n} = todosApi;","map":{"version":3,"names":["createApi","baseQuery","boardsApi","todosApi","reducerPath","tagTypes","endpoints","build","getTodo","query","todoId","url","method","providesTags","createTodos","mutation","_ref","todo","columnId","body","invalidatesTags","onQueryStarted","arg","_ref2","dispatch","queryFulfilled","data","util","invalidateTags","updateTodos","_ref3","rest","_ref4","deleteTodos","_ref5","_ref6","changeTodosColumn","_ref7","_ref8","console","log","useGetTodoQuery","useCreateTodosMutation","useUpdateTodosMutation","useDeleteTodosMutation","useChangeTodosColumnMutation"],"sources":["/Users/vlasvin/Documents/GitHub/TaskPro-FrontEnd-Team5/src/store/cardsSlice.js"],"sourcesContent":["import { createApi } from '@reduxjs/toolkit/query/react';\nimport { baseQuery } from './baseQuery';\nimport { boardsApi } from './boardsSlice';\n\nexport const todosApi = createApi({\n  reducerPath: 'todosApi',\n  baseQuery: baseQuery,\n  tagTypes: ['Todos'],\n  endpoints: build => ({\n    getTodo: build.query({\n      query: todoId => ({ url: `/api/todos/${todoId}`, method: 'GET' }),\n      providesTags: ['Todos'],\n    }),\n    createTodos: build.mutation({\n      query: ({ todo, columnId }) => ({\n        url: `/api/todos/${columnId}`,\n        method: 'POST',\n        body: todo,\n      }),\n      invalidatesTags: ['Todos'],\n      onQueryStarted: async (arg, { dispatch, queryFulfilled }) => {\n        const { data } = await queryFulfilled;\n        if (data) {\n          dispatch(boardsApi.util.invalidateTags(['Board']));\n        }\n      },\n    }),\n    updateTodos: build.mutation({\n      query: ({ todoId, ...rest }) => ({\n        url: `/api/todos/${todoId}`,\n        method: 'PATCH',\n        body: rest,\n      }),\n      invalidatesTags: ['Todos'],\n      onQueryStarted: async (arg, { dispatch, queryFulfilled }) => {\n        const { data } = await queryFulfilled;\n        if (data) {\n          dispatch(boardsApi.util.invalidateTags(['Board']));\n        }\n      },\n    }),\n    deleteTodos: build.mutation({\n      query: ({ todoId }) => ({\n        url: `/api/todos/${todoId}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Todos'],\n      onQueryStarted: async (arg, { dispatch, queryFulfilled }) => {\n        const { data } = await queryFulfilled;\n        if (data) {\n          dispatch(boardsApi.util.invalidateTags(['Board']));\n        }\n      },\n    }),\n    changeTodosColumn: build.mutation({\n      query: ({ todoId, columnId }) => ({\n        url: `/api/todos/${todoId}/owner/${columnId}`,\n        method: 'PATCH',\n      }),\n      invalidatesTags: ['Todos'],\n      onQueryStarted: async (arg, { dispatch, queryFulfilled }) => {\n        const { data } = await queryFulfilled;\n        console.log(data);\n        if (data) {\n          dispatch(boardsApi.util.invalidateTags(['Board']));\n        }\n      },\n    }),\n  }),\n});\n\nexport const {\n  useGetTodoQuery,\n  useCreateTodosMutation,\n  useUpdateTodosMutation,\n  useDeleteTodosMutation,\n  useChangeTodosColumnMutation,\n} = todosApi;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}