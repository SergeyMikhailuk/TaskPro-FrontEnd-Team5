{"ast":null,"code":"var _jsxFileName = \"/Users/vlasvin/Documents/GitHub/TaskPro-FrontEnd-Team5/src/pages/Board/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useGetBoardByIdQuery, useGetBoardsQuery } from 'store/boardsSlice';\nimport { Column } from 'components/Board/Column/Column';\nimport { ReactModal } from 'components/ModalWindows/Modal/Modal';\nimport { ModalColumn } from 'components/ModalWindows/ColumnModals';\nimport { Filter } from 'components/Filter/Filter';\nimport { WrapperMain, Header, AddIcon, Title, AddButton, IconWrapper, Text, ContentWrapper, Wrapper } from './styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardPage = () => {\n  _s();\n  var _boardsData$, _boardData$board, _boardData$board2, _boardData$columns, _boardData$columns2;\n  const [isOpenColumnModal, setIsOpenColumnModal] = useState(false);\n  const {\n    data: boardsData\n  } = useGetBoardsQuery();\n  const currentId = (_boardsData$ = boardsData[0]) === null || _boardsData$ === void 0 ? void 0 : _boardsData$._id;\n  const activeBoardId = useSelector(store => store.activeBoardId) || currentId;\n  const {\n    data: boardData\n  } = useGetBoardByIdQuery(activeBoardId);\n  const scrollRef = useRef(null);\n  const handleOpenColumnModal = () => {\n    setIsOpenColumnModal(true);\n  };\n  const handleCloseColumnModal = () => {\n    setIsOpenColumnModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(WrapperMain, {\n    $url: boardData === null || boardData === void 0 ? void 0 : (_boardData$board = boardData.board) === null || _boardData$board === void 0 ? void 0 : _boardData$board.backgroundURL,\n    children: [/*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          children: boardData === null || boardData === void 0 ? void 0 : (_boardData$board2 = boardData.board) === null || _boardData$board2 === void 0 ? void 0 : _boardData$board2.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      ref: scrollRef,\n      children: [/*#__PURE__*/_jsxDEV(ContentWrapper, {\n        children: [boardData === null || boardData === void 0 ? void 0 : (_boardData$columns = boardData.columns) === null || _boardData$columns === void 0 ? void 0 : _boardData$columns.map(column => /*#__PURE__*/_jsxDEV(Column, {\n          item: column,\n          activeBoardId: activeBoardId\n        }, column._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(AddButton, {\n          onClick: handleOpenColumnModal,\n          $length: boardData === null || boardData === void 0 ? void 0 : (_boardData$columns2 = boardData.columns) === null || _boardData$columns2 === void 0 ? void 0 : _boardData$columns2.length,\n          type: \"button\",\n          children: [/*#__PURE__*/_jsxDEV(IconWrapper, {\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Add another column\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n        isOpen: isOpenColumnModal,\n        title: \"Add Column\",\n        closeModal: handleCloseColumnModal,\n        onRequestClose: handleCloseColumnModal,\n        children: /*#__PURE__*/_jsxDEV(ModalColumn, {\n          typeModal: 'add',\n          activeBoardId: activeBoardId,\n          closeModal: handleCloseColumnModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(BoardPage, \"99trfZELG9+XdQzL6ctzutf39r0=\", false, function () {\n  return [useGetBoardsQuery, useSelector, useGetBoardByIdQuery];\n});\n_c = BoardPage;\nexport default BoardPage;\nvar _c;\n$RefreshReg$(_c, \"BoardPage\");","map":{"version":3,"names":["React","useState","useRef","useSelector","useGetBoardByIdQuery","useGetBoardsQuery","Column","ReactModal","ModalColumn","Filter","WrapperMain","Header","AddIcon","Title","AddButton","IconWrapper","Text","ContentWrapper","Wrapper","jsxDEV","_jsxDEV","BoardPage","_s","_boardsData$","_boardData$board","_boardData$board2","_boardData$columns","_boardData$columns2","isOpenColumnModal","setIsOpenColumnModal","data","boardsData","currentId","_id","activeBoardId","store","boardData","scrollRef","handleOpenColumnModal","handleCloseColumnModal","$url","board","backgroundURL","children","fileName","_jsxFileName","lineNumber","columnNumber","title","ref","columns","map","column","item","onClick","$length","length","type","isOpen","closeModal","onRequestClose","typeModal","_c","$RefreshReg$"],"sources":["/Users/vlasvin/Documents/GitHub/TaskPro-FrontEnd-Team5/src/pages/Board/index.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { useGetBoardByIdQuery, useGetBoardsQuery } from 'store/boardsSlice';\nimport { Column } from 'components/Board/Column/Column';\nimport { ReactModal } from 'components/ModalWindows/Modal/Modal';\nimport { ModalColumn } from 'components/ModalWindows/ColumnModals';\nimport { Filter } from 'components/Filter/Filter';\n\nimport {\n  WrapperMain,\n  Header,\n  AddIcon,\n  Title,\n  AddButton,\n  IconWrapper,\n  Text,\n  ContentWrapper,\n  Wrapper,\n} from './styled';\n\nconst BoardPage = () => {\n  const [isOpenColumnModal, setIsOpenColumnModal] = useState(false);\n  const { data: boardsData } = useGetBoardsQuery();\n  const currentId = boardsData[0]?._id;\n  const activeBoardId = useSelector(store => store.activeBoardId) || currentId;\n\n  const { data: boardData } = useGetBoardByIdQuery(activeBoardId);\n\n  const scrollRef = useRef(null);\n\n  const handleOpenColumnModal = () => {\n    setIsOpenColumnModal(true);\n  };\n\n  const handleCloseColumnModal = () => {\n    setIsOpenColumnModal(false);\n  };\n\n  return (\n    <WrapperMain $url={boardData?.board?.backgroundURL}>\n      <Filter />\n      <Header>\n        <div>\n          <Title>{boardData?.board?.title}</Title>\n        </div>\n      </Header>\n\n      <Wrapper ref={scrollRef}>\n        <ContentWrapper>\n          {boardData?.columns?.map(column => (\n            <Column\n              key={column._id}\n              item={column}\n              activeBoardId={activeBoardId}\n            />\n          ))}\n          <AddButton\n            onClick={handleOpenColumnModal}\n            $length={boardData?.columns?.length}\n            type=\"button\"\n          >\n            <IconWrapper>\n              <AddIcon />\n            </IconWrapper>\n            <Text>Add another column</Text>\n          </AddButton>\n        </ContentWrapper>\n        <Filter></Filter>\n        <ReactModal\n          isOpen={isOpenColumnModal}\n          title=\"Add Column\"\n          closeModal={handleCloseColumnModal}\n          onRequestClose={handleCloseColumnModal}\n        >\n          <ModalColumn\n            typeModal={'add'}\n            activeBoardId={activeBoardId}\n            closeModal={handleCloseColumnModal}\n          />\n        </ReactModal>\n      </Wrapper>\n    </WrapperMain>\n  );\n};\n\nexport default BoardPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}