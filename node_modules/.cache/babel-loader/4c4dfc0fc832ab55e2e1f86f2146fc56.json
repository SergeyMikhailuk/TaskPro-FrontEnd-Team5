{"ast":null,"code":"import * as Yup from 'yup';\nexport const LoginSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Email is required').matches(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/, {\n    message: 'Email error',\n    excludeEmptyString: true\n  }),\n  password: Yup.string().min(8, 'Password must be at least 8 characters').required('Password is required').matches(/^[a-zA-Z0-9]+$/, {\n    message: 'Password error',\n    excludeEmptyString: true\n  })\n});","map":{"version":3,"names":["Yup","LoginSchema","object","shape","email","string","required","matches","message","excludeEmptyString","password","min"],"sources":["/Users/vlasvin/Documents/GitHub/TaskPro-FrontEnd-Team5/src/components/Login/LoginSchema.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Email is required')\n    .matches(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/, {\n      message: 'Email error',\n      excludeEmptyString: true,\n    }),\n  password: Yup.string()\n    .min(8, 'Password must be at least 8 characters')\n    .required('Password is required')\n    .matches(/^[a-zA-Z0-9]+$/, {\n      message: 'Password error',\n      excludeEmptyString: true,\n    }),\n});\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,OAAO,MAAMC,WAAW,GAAGD,GAAG,CAACE,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EAC5CC,KAAK,EAAEJ,GAAG,CAACK,MAAM,CAAC,CAAC,CAChBD,KAAK,CAAC,eAAe,CAAC,CACtBE,QAAQ,CAAC,mBAAmB,CAAC,CAC7BC,OAAO,CAAC,kDAAkD,EAAE;IAC3DC,OAAO,EAAE,aAAa;IACtBC,kBAAkB,EAAE;EACtB,CAAC,CAAC;EACJC,QAAQ,EAAEV,GAAG,CAACK,MAAM,CAAC,CAAC,CACnBM,GAAG,CAAC,CAAC,EAAE,wCAAwC,CAAC,CAChDL,QAAQ,CAAC,sBAAsB,CAAC,CAChCC,OAAO,CAAC,gBAAgB,EAAE;IACzBC,OAAO,EAAE,gBAAgB;IACzBC,kBAAkB,EAAE;EACtB,CAAC;AACL,CAAC,CAAC"},"metadata":{},"sourceType":"module"}